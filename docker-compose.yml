version: "3"
services:
  pgsql:
    image: postgres:16.2
    container_name: todo-app-pgsql
    restart: unless-stopped
    ports:
      - "5432:5432"
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
      POSTGRES_DB: tasks_db
    tty: true
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - ./scripts/pgsql:/docker-entrypoint-initdb.d
      - .data/pgsql:/var/lib/postgresql/data
    networks:
      - todo-app-network

  adminer:
    image: adminer
    container_name: todo-app-adminer
    restart: unless-stopped
    ports:
      - "8080:8080"
    networks:
      - todo-app-network
  minio:
    image: "minio/minio:latest"
    container_name: todo-app-minio
    ports:
      - "9000:9000"
      - "9001:9001"
    networks:
      - todo-app-network
    volumes:
      - ".data/minio:/data"
    environment:
      MINIO_ROOT_USER: "minio"
      MINIO_ROOT_PASSWORD: "uikui5choRith0ZieV2zohN5aish5r"
    command: minio server /data/minio --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      retries: 3
      timeout: 5s

  api:
    build:
      context: ./backend
      dockerfile: Dockerfile
    image: todo-app-api
    container_name: todo-app-api
    restart: unless-stopped
    tty: true
    ports:
      - "8081:8081"
    volumes:
      - ./backend:/var/www/html
    labels:
      - "traefik.http.routers.api.rule=(Host(`todo-app.localhost`) && PathPrefix(`/api`))"
    depends_on:
      - pgsql
      - traefik

    networks:
      - todo-app-network

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "8082:8082"
    restart: unless-stopped
    tty: true
    labels:
      - "traefik.http.routers.site.rule=Host(`todo-app.localhost`)"
    container_name: todo-app-frontend
    depends_on:
      - api
      - traefik

    networks:
      - todo-app-network

  nginx:
    depends_on:
      - frontend
      - api
    image: nginx:alpine
    container_name: todo-app-nginx
    restart: unless-stopped
    ports:
      - "8089:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
    networks:
      - todo-app-network

  mailpit:
    image: "axllent/mailpit:latest"
    container_name: todo-app-mailpit
    ports:
      - "${FORWARD_MAILPIT_PORT:-1025}:1025"
      - "${FORWARD_MAILPIT_DASHBOARD_PORT:-8025}:8025"
    labels:
      - "traefik.http.routers.mailpit.rule=(Host(`todo-app.mail.localhost`))"
      - "traefik.http.services.mailpit.loadbalancer.server.port=8025"

    networks:
      - todo-app-network

  traefik:
    image: traefik:v3.0
    container_name: todo-app-traefik
    restart: unless-stopped
    # Enables the web UI and tells Traefik to listen to docker
    command: --api.insecure=true --providers.docker
    ports:
      - "8083:8080"
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

    networks:
      - todo-app-network

networks:
  todo-app-network:
    driver: bridge

volumes:
  pgsql:
    driver: local
